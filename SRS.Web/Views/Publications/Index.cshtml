@using Microsoft.AspNet.Identity;
@using PagedList.Mvc
@using SRS.Domain.Enums.OrderTypes
@using SRS.Services.Models.PublicationModels
@using SRS.Services.Extensions
@using SRS.Web.Enums
@using SRS.Web.Models.Publications
@using SRS.Web.Models.Shared
@using SRS.Web.Services

@model ItemsViewModel<PublicationFilterViewModel, BasePublicationModel>
@{
    ViewBag.Title = "Публікації";
    var userId = User.Identity.GetUserId();
    var publicationTypeSeparator = ",";
}

<h2>Публікації</h2>
<button class="collapsible btn btn-light" data-target="#filter-container">Фільтри <i class="bi bi-filter"></i></button>
<form id="filter-container" class="collapse-target">
    @{ViewBag.SearchPlaceholder = "Пошук";}
    @{Html.RenderPartial("Filters/DepartmentFilter", Model.FilterModel);}
    @{Html.RenderPartial("Filters/UserFilter", Model.FilterModel.UserId != null ? Model.FilterModel.UserId : "");}
    <div class="form-group">
        <div>
            @Html.EnumDropDownListFor(model => model.FilterModel.PublicationType, "Виберіть тип публікації", new { @class = "form-control chosen-select", Name = "PublicationType" })
        </div>
    </div>
    <div class="form-group field" data-types="@string.Join(publicationTypeSeparator, PublicationFieldsService.GetAvailablePublicationTypes(PublicationField.EditionCategory))">
        <div>
            @Html.EnumDropDownListFor(model => model.FilterModel.EditionCategory, "Виберіть тип видання", new { @class = "form-control chosen-select", Name = "EditionCategory" })
        </div>
    </div>
    @{Html.RenderPartial("Filters/BaseFilter", Model.FilterModel);}
    @{Html.RenderPartial("Filters/DateRangeFilter", new DateRangeViewModel { From = Model.FilterModel.From, To = Model.FilterModel.To });}
    <div class="form-group">
        <input type="submit" class="btn btn-info" value="Застосувати" />
    </div>
</form>

<p>
    @Html.ActionLink("Створити", "Create", new { language = "UA", returnUrl = Request.QueryString.ToString() }, new { @class = "btn btn-success" })
</p>
<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.ActionLink("Назва", "Index", new PublicationFilterViewModel { Page = 1, OrderBy = (int)PublicationOrderType.Name, Desc = !Model.FilterModel.Desc, CathedraId = Model.FilterModel.CathedraId, FacultyId = Model.FilterModel.FacultyId, UserId = Model.FilterModel.UserId, From = Model.FilterModel.From, To = Model.FilterModel.To, Search = Model.FilterModel.Search, PublicationType = Model.FilterModel.PublicationType, EditionCategory = Model.FilterModel.EditionCategory })
                    @{Html.RenderPartial("Ordering/OrderDirection", new OrderDirectionViewModel { OrderType = (int)PublicationOrderType.Name, OrderBy = Model.FilterModel.OrderBy, Desc = Model.FilterModel.Desc });}
                </th>
                <th>
                    @Html.ActionLink("Рік", "Index", new PublicationFilterViewModel { Page = 1, OrderBy = (int)PublicationOrderType.Date, Desc = !Model.FilterModel.Desc, CathedraId = Model.FilterModel.CathedraId, FacultyId = Model.FilterModel.FacultyId, UserId = Model.FilterModel.UserId, From = Model.FilterModel.From, To = Model.FilterModel.To, Search = Model.FilterModel.Search, PublicationType = Model.FilterModel.PublicationType, EditionCategory = Model.FilterModel.EditionCategory })
                    @{Html.RenderPartial("Ordering/OrderDirection", new OrderDirectionViewModel { OrderType = (int)PublicationOrderType.Date, OrderBy = Model.FilterModel.OrderBy, Desc = Model.FilterModel.Desc });}
                </th>
                <th>
                    @Html.ActionLink("Тип", "Index", new PublicationFilterViewModel { Page = 1, OrderBy = (int)PublicationOrderType.PublicationType, Desc = !Model.FilterModel.Desc, CathedraId = Model.FilterModel.CathedraId, FacultyId = Model.FilterModel.FacultyId, UserId = Model.FilterModel.UserId, From = Model.FilterModel.From, To = Model.FilterModel.To, Search = Model.FilterModel.Search, PublicationType = Model.FilterModel.PublicationType, EditionCategory = Model.FilterModel.EditionCategory })
                    @{Html.RenderPartial("Ordering/OrderDirection", new OrderDirectionViewModel { OrderType = (int)PublicationOrderType.PublicationType, OrderBy = Model.FilterModel.OrderBy, Desc = Model.FilterModel.Desc });}
                </th>
                <th>
                    @Html.ActionLink("Журнал", "Index", new PublicationFilterViewModel { Page = 1, OrderBy = (int)PublicationOrderType.Journal, Desc = !Model.FilterModel.Desc, CathedraId = Model.FilterModel.CathedraId, FacultyId = Model.FilterModel.FacultyId, UserId = Model.FilterModel.UserId, From = Model.FilterModel.From, To = Model.FilterModel.To, Search = Model.FilterModel.Search, PublicationType = Model.FilterModel.PublicationType, EditionCategory = Model.FilterModel.EditionCategory })
                    @{Html.RenderPartial("Ordering/OrderDirection", new OrderDirectionViewModel { OrderType = (int)PublicationOrderType.Journal, OrderBy = Model.FilterModel.OrderBy, Desc = Model.FilterModel.Desc });}
                </th>
                <th>
                    @Html.ActionLink("Автори", "Index", new PublicationFilterViewModel { Page = 1, OrderBy = (int)PublicationOrderType.AuthorsOrder, Desc = !Model.FilterModel.Desc, CathedraId = Model.FilterModel.CathedraId, FacultyId = Model.FilterModel.FacultyId, UserId = Model.FilterModel.UserId, From = Model.FilterModel.From, To = Model.FilterModel.To, Search = Model.FilterModel.Search, PublicationType = Model.FilterModel.PublicationType, EditionCategory = Model.FilterModel.EditionCategory })
                    @{Html.RenderPartial("Ordering/OrderDirection", new OrderDirectionViewModel { OrderType = (int)PublicationOrderType.AuthorsOrder, OrderBy = Model.FilterModel.OrderBy, Desc = Model.FilterModel.Desc });}
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @item.PublicationType.GetDisplayName()
                    </td>
                    <td>
                        @item.JournalName
                    </td>
                    <td>
                        @if (!string.IsNullOrEmpty(item.AuthorsOrder))
                        {
                            @Html.DisplayFor(modelItem => item.AuthorsOrder)
                        }
                        else
                        {
                            <span>--</span>
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Редагувати", "Edit", new { id = item.Id, returnUrl = Request.QueryString.ToString() }, new { @class = "btn btn-info" })
                        @Html.ActionLink("Деталі", "Details", new { id = item.Id, returnUrl = Request.QueryString.ToString() }, new { @class = "btn btn-info" })
                        @if (item.UserIds.Any(x => x == userId))
                        {
                            @Html.ActionLink("Видалити", "Delete", new { id = item.Id, returnUrl = Request.QueryString.ToString() }, new { @class = "btn btn-danger" })
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@{Html.RenderPartial("Pagination/PageInfo", new PageInfoViewModel { PageNumber = Model.Items.PageNumber, PageCount = Model.Items.PageCount, PageItemCount = Model.Items.Count, TotalItemCount = Model.Items.TotalItemCount });}
@Html.PagedListPager(Model.Items, page => Url.Action("Index", new PublicationFilterViewModel { Page = page, OrderBy = Model.FilterModel.OrderBy, Desc = Model.FilterModel.Desc, CathedraId = Model.FilterModel.CathedraId, FacultyId = Model.FilterModel.FacultyId, UserId = Model.FilterModel.UserId, From = Model.FilterModel.From, To = Model.FilterModel.To, Search = Model.FilterModel.Search, PublicationType = Model.FilterModel.PublicationType, EditionCategory = Model.FilterModel.EditionCategory }))

@section Styles {
    @Styles.Render("~/Content/chosen/bundle")
}

@section Scripts {
    <script>var separator = '@publicationTypeSeparator';</script>
    @Scripts.Render("~/bundles/chosen")
    @Scripts.Render("~/bundles/departmentSelector")
    @Scripts.Render("~/bundles/collapsible")
    @Scripts.Render("~/bundles/availableFieldsComponent")
    @Scripts.Render("~/bundles/publications/index")
}