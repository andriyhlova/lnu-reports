@using Microsoft.AspNet.Identity;
@using PagedList.Mvc
@using SRS.Domain.Enums
@using SRS.Domain.Enums.OrderTypes
@using SRS.Services.Extensions
@using SRS.Services.Models.Constants
@using SRS.Services.Models.ReportModels
@using SRS.Web.Extensions
@using SRS.Web.Models.Reports
@using SRS.Web.Models.Shared

@model ItemsViewModel<ReportFilterViewModel, BaseReportModel>

@{
    ViewBag.Title = "Індивідуальні звіти";
    var userId = User.Identity.GetUserId();
}

<h2>Індивідуальні звіти</h2>
<button class="collapsible btn btn-light" data-target="#filter-container">Фільтри <i class="bi bi-filter"></i></button>
<form id="filter-container" class="collapse-target">
    @{Html.RenderPartial("Filters/DepartmentFilter", Model.FilterModel);}
    @{Html.RenderPartial("Filters/UserFilter", Model.FilterModel.UserId != null ? Model.FilterModel.UserId : "");}
    @{Html.RenderPartial("Filters/BaseFilter", Model.FilterModel);}
    @{Html.RenderPartial("Filters/DateRangeFilter", new DateRangeViewModel { From = Model.FilterModel.From, To = Model.FilterModel.To });}
    <div class="form-group">
        <input type="submit" class="btn btn-info" value="Застосувати" />
    </div>
</form>

<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.ActionLink("Протокол", "Index", new ReportFilterViewModel { Page = 1, OrderBy = (int)ReportOrderType.Protocol, Desc = !Model.FilterModel.Desc, CathedraId = Model.FilterModel.CathedraId, FacultyId = Model.FilterModel.FacultyId, UserId = Model.FilterModel.UserId, From = Model.FilterModel.From, To = Model.FilterModel.To, Search = Model.FilterModel.Search })
                    @{Html.RenderPartial("Ordering/OrderDirection", new OrderDirectionViewModel { OrderType = (int)ReportOrderType.Protocol, OrderBy = Model.FilterModel.OrderBy, Desc = Model.FilterModel.Desc });}
                </th>
                <th>
                    @Html.ActionLink("Дата", "Index", new ReportFilterViewModel { Page = 1, OrderBy = (int)ReportOrderType.Date, Desc = !Model.FilterModel.Desc, CathedraId = Model.FilterModel.CathedraId, FacultyId = Model.FilterModel.FacultyId, UserId = Model.FilterModel.UserId, From = Model.FilterModel.From, To = Model.FilterModel.To, Search = Model.FilterModel.Search })
                    @{Html.RenderPartial("Ordering/OrderDirection", new OrderDirectionViewModel { OrderType = (int)ReportOrderType.Date, OrderBy = Model.FilterModel.OrderBy, Desc = Model.FilterModel.Desc });}
                </th>
                <th>
                    @Html.ActionLink("Статус", "Index", new ReportFilterViewModel { Page = 1, OrderBy = (int)ReportOrderType.State, Desc = !Model.FilterModel.Desc, CathedraId = Model.FilterModel.CathedraId, FacultyId = Model.FilterModel.FacultyId, UserId = Model.FilterModel.UserId, From = Model.FilterModel.From, To = Model.FilterModel.To, Search = Model.FilterModel.Search })
                    @{Html.RenderPartial("Ordering/OrderDirection", new OrderDirectionViewModel { OrderType = (int)ReportOrderType.State, OrderBy = Model.FilterModel.OrderBy, Desc = Model.FilterModel.Desc });}
                </th>
                <th>
                    @Html.ActionLink("Користувач", "Index", new ReportFilterViewModel { Page = 1, OrderBy = (int)ReportOrderType.User, Desc = !Model.FilterModel.Desc, CathedraId = Model.FilterModel.CathedraId, FacultyId = Model.FilterModel.FacultyId, UserId = Model.FilterModel.UserId, From = Model.FilterModel.From, To = Model.FilterModel.To, Search = Model.FilterModel.Search })
                    @{Html.RenderPartial("Ordering/OrderDirection", new OrderDirectionViewModel { OrderType = (int)ReportOrderType.User, OrderBy = Model.FilterModel.OrderBy, Desc = Model.FilterModel.Desc });}
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Protocol)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @item.State.GetDisplayName()
                    </td>
                    <td>
                        @foreach (var initial in item.I18nUserInitials)
                        {
                            if (initial.Language == Language.UA)
                            {
                                <span>@initial.LastName&nbsp;@initial.FirstName</span>
                                break;
                            }
                        }
                    </td>
                    <td>
                        <div>
                            <a href="@Url.Action("Preview", "ReportGeneration", new { reportId = item.Id })"
                               class="btn btn-info"
                               target="_blank">
                                Переглянути
                            </a>
                            @if (item.State == ReportState.Draft && item.UserId == userId)
                            {
                                @Html.ActionLink("Редагувати", "Index", "Report", new { reportId = item.Id }, new { @class = "btn btn-info" })
                            }
                            @if (item.State == ReportState.Draft)
                            {
                                using (Html.BeginForm("Sign", "ReportList", Model.FilterModel))
                                {
                                    @Html.Hidden("reportId", item.Id)
                                    <button type="submit" class="btn btn-primary">Підписати</button>
                                }
                            }
                            @if (User.IsInRole(RoleNames.Superadmin) || User.IsInRole(RoleNames.RectorateAdmin) || User.IsInRole(RoleNames.DeaneryAdmin) || User.IsInRole(RoleNames.CathedraAdmin))
                            {
                                if (item.State == ReportState.Signed)
                                {
                                    using (Html.BeginForm("Confirm", "ReportList", Model.FilterModel))
                                    {
                                        @Html.Hidden("reportId", item.Id)
                                        <button type="submit" class="btn btn-success">Підтвердити</button>
                                    }
                                }
                                if (item.State != ReportState.Draft)
                                {
                                    using (Html.BeginForm("Negate", "ReportList", Model.FilterModel))
                                    {
                                        @Html.Hidden("reportId", item.Id)
                                        <button type="submit" class="btn btn-danger">Повернути</button>
                                    }
                                }
                            }
                        </div>
                        <div>
                            @Html.ActionLink("PDF", "PreviewPdf", "ReportGeneration", new { reportId = item.Id }, new { @target = "_blank", @class = "btn btn-default" })
                            @Html.ActionLink("LaTex", "GetLatex", "ReportGeneration", new { reportId = item.Id }, new { @class = "btn btn-default" })
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@{Html.RenderPartial("Pagination/PageInfo", new PageInfoViewModel { PageNumber = Model.Items.PageNumber, PageCount = Model.Items.PageCount });}
@Html.PagedListPager(Model.Items, page => Url.Action("Index", new ReportFilterViewModel { Page = page, OrderBy = Model.FilterModel.OrderBy, Desc = Model.FilterModel.Desc, CathedraId = Model.FilterModel.CathedraId, FacultyId = Model.FilterModel.FacultyId, UserId = Model.FilterModel.UserId, From = Model.FilterModel.From, To = Model.FilterModel.To, Search = Model.FilterModel.Search }))


@section Styles {
    @Styles.Render("~/Content/chosen/bundle")
}

@section Scripts {
    @Scripts.Render("~/bundles/chosen")
    @Scripts.Render("~/bundles/departmentSelector")
    @Scripts.Render("~/bundles/collapsible")
}