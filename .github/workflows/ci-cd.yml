name: Build and Publish

env:
  BUILD_PATH: ${{ github.workspace }}\_build\
  DEPLOYMENT_PATH: C:\Users\Administrator\actions-runner\_work\lnu-reports\lnu-reports\deployment
  XUNIT_TOOLS_PATH: .\tools\xunit

on:
  workflow_dispatch:
  push:
    branches:
      - features/SRS-52390

jobs:
  build:
    name: Build and Analyze
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Setup MSBuild path
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Create Build Directory
        run: mkdir ${{ env.BUILD_PATH }}

      - name: Restore NuGet packages
        run: nuget restore -verbosity quiet

      - name: Run SonarScanner Begin Command
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"SRS" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://cb01-13-51-245-49.ngrok-free.app"

      - name: Build app for release
        run: |
          msbuild SRS.sln -verbosity:minimal -t:rebuild -property:Configuration=Release /p:WebPublishMethod=FileSystem /p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:PublishUrl="../_build"

      - name: Run SonarScanner End Command
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: ${{ env.BUILD_PATH }}

      - name: List contents of the Release directory
        run: dir ${{ github.workspace }}\SRS.Testing\bin\Release\

      - name: List contents of the net48 directory
        run: dir ${{ github.workspace }}\SRS.Testing\bin\Release\net48\

      - name: Download xUnit Console Runner
        run: |
          mkdir ${{ env.XUNIT_TOOLS_PATH }}
          curl -L "https://nuget.org/api/v2/package/xunit.runner.console/2.4.1" -o xunit.zip
          Expand-Archive xunit.zip -DestinationPath ${{ env.XUNIT_TOOLS_PATH }}

      - name: Run xUnit Tests
        run: |
          ${{ env.XUNIT_TOOLS_PATH }}\tools\net472\xunit.console.exe "${{ github.workspace }}\SRS.Testing\bin\Release\net48\SRS.Testing.dll" -xml "${{ github.workspace }}\TestResults\test_results.xml"

      - uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ${{ github.workspace }}\TestResults\*.xml

  deploy:
    needs: build
    name: Deploy to Server using Web Deploy
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: my-artifact
          path: deployment

      - name: Deploy to IIS using Web Deploy
        run: |
          & "C:\Program Files (x86)\IIS\Microsoft Web Deploy V3\msdeploy.exe" --% -verb:sync -source:contentPath="${{ env.DEPLOYMENT_PATH }}" -dest:contentPath="%SystemDrive%\inetpub\wwwroot",ComputerName="https://127.0.0.1:8172/MsDeploy.axd?site=Default Web Site",UserName="${{ secrets.SERVER_USER }}",Password="${{ secrets.SERVER_PASSWORD }}",AuthType='Basic' -allowUntrusted
